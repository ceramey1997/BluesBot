[tox]
envlist = analysis, py36

[package]
name = blues_bot

[cov]
xml = --cov-report xml:{envname}-coverage.xml
term = --cov-report term-missing
html = --cov-report html:{toxworkdir}/{envname}cov
branch = --cov-branch
directory =--cov {envsitepackagesdir}/{[package]name}
coverage = {[cov]xml} {[cov]term} {[cov]html} {[cov]branch} {[cov]directory}
cov_fail_under=100

[pylama]
format = pylint
skip = */.tox/*,*/.env/*
linters = pycodestyle,pylint
analysis = pylama {[package]name} test

[pylama:test/*]
max_line_length=99

[pytest]
flags =-vvl
cov-fail-under=100
unit_results =--junitxml={toxworkdir}/{envname}_results.xml
test = py.test {[pytest]flags} {[pytest]unit_results}
with_metrics = {[pytest]test} {[cov]coverage}

[testenv:analysis]
commands = {[pylama]analysis}
deps = -r{toxinidir}/test-requirements.txt

[testenv]
basepython =
    py36: python3.6
    analysis: python3.6
envdir =
    py36: {toxworkdir}/.py36
    analysis: {toxworkdir}/.py36
setenv =
    COVERAGE_FILE = {envdir}/.coverage
commands =
    py3-test: {[pytest]with_metrics} test
    py3-no-coverage: {[pytest]test} test
    py3-unit: {[pytest]with_metrics} test/unit
    py3-component: {[pytest]with_metrics} test/component
    py3-adhoc: {posargs: bash -c 'echo must provide posargs with "tox args -- posargs"'}
deps = 
   -r{toxinidir}/requirements.txt
   -r{toxinidir}/test-requirements.txt